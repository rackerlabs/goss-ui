version: 2.1

commands:
  s3sync:
    description: "Sync build to s3 and replace index file"
    parameters:
      bucket:
        type: string
      path:
        type: string
    steps:
      - run:
          command: "aws s3 sync build s3://<< parameters.bucket >>/<< parameters.path >> --acl=\"public-read\" --delete --cache-control max-age=31536000,public"
      - run:
          command: "aws s3 cp s3://<< parameters.bucket >>/<< parameters.path >>/index.html s3://<< parameters.bucket >>/<< parameters.path >>/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read"

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  build:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/goss-ui
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn format-check
      - run: yarn test
  aws_auth:
    executor: aws-cli/default
    working_directory: ~/goss-ui
    environment:
      AWS_REGION: us-west-2
    steps:
      - checkout
      - aws-cli/install
      - aws-cli/configure:
          profile-name: goss-ci-dev
          aws-access-key-id: AWS_ACCESS_KEY_ID_DEV
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_DEV
          aws-region: AWS_REGION
      - aws-cli/configure:
          profile-name: goss-ci-prod
          aws-access-key-id: AWS_ACCESS_KEY_ID_PROD
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_PROD
          aws-region: AWS_REGION
      - persist_to_workspace:
          root: ~/.aws
          paths:
            - "*"
      - run:
          command: scripts/bootstrap-terraform dev
          environment:
            AWS_PROFILE: goss-ci-dev
      - run:
          command: scripts/bootstrap-terraform prod
          environment:
            AWS_PROFILE: goss-ci-prod
  terraform_dev:
    docker:
      - image: hashicorp/terraform:0.12.2
    environment:
      AWS_PROFILE: goss-ci-dev
    steps:
      - checkout
      - attach_workspace:
          at: ~/.aws
      - run:
          command: scripts/terraform dev
  upload_assets_dev:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/goss-ui
    environment:
      AWS_PROFILE: goss-ci-dev
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - aws-cli/install
      - attach_workspace:
          at: ~/.aws
      - run:
          command: |
            export PUBLIC_URL="/goss-${CIRCLE_SHA1}"
            yarn build
      - s3sync:
          bucket: goss-ui-dev
          path: goss-${CIRCLE_SHA1}
  terraform_prod:
    docker:
      - image: hashicorp/terraform:0.12.2
    environment:
      AWS_PROFILE: goss-ci-prod
    steps:
      - checkout
      - attach_workspace:
          at: ~/.aws
      - run:
          command: scripts/terraform prod
  upload_assets_prod:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/goss-ui
    environment:
      AWS_PROFILE: goss-ci-prod
      REACT_APP_GOSS_ENABLED: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - aws-cli/install
      - attach_workspace:
          at: ~/.aws
      - run:
          command: |
            export PUBLIC_URL="/goss"
            yarn build
      - s3sync:
          bucket: goss-ui-prod
          path: goss
  sync_prod_assets_to_dev:
    docker:
      - image: circleci/node:10.16.0
    working_directory: ~/goss-ui
    environment:
      AWS_PROFILE: goss-ci-dev
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - aws-cli/install
      - attach_workspace:
          at: ~/.aws
      - run:
          command: |
            export PUBLIC_URL="/goss"
            yarn build
      - s3sync:
          bucket: goss-ui-dev
          path: goss
  integration_tests:
    docker:
        - image: circleci/node:10.16.0-browsers
    working_directory: ~/goss-ui
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          command: scripts/integration https://dev.manage.rackspace.com/goss-${CIRCLE_SHA1}
          no_output_timeout: 30m
      - store_artifacts:
          path: artifacts

workflows:
  release:
    jobs:
      - aws_auth
      - build
      - terraform_dev:
          requires:
            - aws_auth
            - build
      - upload_assets_dev:
          requires:
            - terraform_dev
            - build
      - terraform_prod:
          requires:
            - aws_auth
            - build
          filters:
            branches:
              only:
                - master
      - upload_assets_prod:
          requires:
            - terraform_prod
            - build
          filters:
            branches:
              only:
                - master
      - sync_prod_assets_to_dev:
          requires:
            - terraform_prod
            - build
          filters:
            branches:
              only:
                - master
      - approve_integration_tests:
          type: approval
          requires:
            - upload_assets_dev
      - integration_tests:
          requires:
            - approve_integration_tests
